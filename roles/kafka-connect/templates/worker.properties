bootstrap.servers={{ kafka_brokers }}

# unique 한 group id.
group.id={{ group_id }}

key.converter=org.apache.kafka.connect.json.JsonConverter
value.converter=io.confluent.connect.avro.AvroConverter
key.converter.schemas.enable=false
value.converter.schemas.enable=true
value.converter.schema.registry.url={{ schema_registry_url }}

internal.key.converter=org.apache.kafka.connect.json.JsonConverter
internal.value.converter=org.apache.kafka.connect.json.JsonConverter
internal.key.converter.schemas.enable=false
internal.value.converter.schemas.enable=false

# unique 한 offset topic 이름.
offset.storage.topic={{ topic_offset }}
offset.storage.replication.factor=2
offset.storage.partitions=25

# unique 한 config topic 이름.
config.storage.topic={{ topic_config }}
config.storage.replication.factor=2

# unique 한 status topic 이름.
status.storage.topic={{ topic_status }}
status.storage.replication.factor=2
status.storage.partitions=5

offset.flush.interval.ms=10000
rest.port={{ kafka_connect_rest_port }}

# consumer config.
consumer.auto.offset.reset=latest